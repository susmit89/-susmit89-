{"version":3,"sources":["services/topics.js","services/posts.js","components/common/like.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/blogsTable.jsx","components/common/pagination.jsx","components/common/listGroup.jsx","components/common/searchBox.jsx","components/blogs.jsx","utils/paginate.js","components/notFound.jsx","components/navBar.jsx","components/about.jsx","components/contact.jsx","App.js","serviceWorker.js","index.js"],"names":["topics","_id","name","blogs","title","topic","numberInStock","dailyRentalRate","publishDate","Like","props","classes","liked","onClick","style","cursor","className","aria-hidden","TableHeader","raiseSort","path","sortColumn","order","onSort","renderSortIcon","column","this","columns","map","key","label","Component","TableBody","renderCell","item","content","_","get","createKey","data","Table","BlogsTable","blog","to","onLike","Pagination","itemsCount","pageSize","currentPage","onPageChange","pageCount","Math","ceil","pages","range","page","ListGroup","items","textProperty","valueProperty","selectedItem","onItemSelect","defaultProps","SearchBox","value","onChange","type","placeholder","e","currentTarget","Blogs","state","searchQuery","selectedTopic","handleLike","index","indexOf","setState","handlePageChange","handleTopicSelect","handleSort","handleSearch","query","filter","g","allblogs","filtered","m","toLowerCase","startsWith","pageNumber","startIndex","slice","take","paginate","orderBy","totalCount","length","count","user","getPagedData","marginBottom","onDelete","handleDelete","NotFound","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","About","Contact","App","Fragment","render","component","from","exact","Boolean","window","location","hostname","match","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c7213f80.chunk.js","sourcesContent":["export const topics = [\n  { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Artificial Intelligence\" },\n  { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Network\" },\n  { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Security\" },\n];\n\nexport function getTopics() {\n  return topics.filter((g) => g);\n}\n","import * as topicsAPI from \"./topics\";\n\nconst blogs = [\n  {\n    _id: \"5b21ca3eeb7f6fbccd471815\",\n    title: \"Terminator\",\n    topic: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Artificial Intelligence\" },\n    numberInStock: 6,\n    dailyRentalRate: 2.5,\n    publishDate: \"2018-01-03T19:04:28.809Z\",\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471816\",\n    title: \"Die Hard\",\n    topic: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Artificial Intelligence\" },\n    numberInStock: 5,\n    dailyRentalRate: 2.5,\n    publishDate: \"2018-01-03T19:04:28.809Z\",\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471817\",\n    title: \"Get Out\",\n    topic: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Security\" },\n    numberInStock: 8,\n    dailyRentalRate: 3.5,\n    publishDate: \"2018-01-03T19:04:28.809Z\",\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471819\",\n    title: \"Trip to Italy\",\n    topic: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Network\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n    publishDate: \"2018-01-03T19:04:28.809Z\",\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\n    title: \"Airplane\",\n    topic: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Network\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n    publishDate: \"2018-01-03T19:04:28.809Z\",\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\n    title: \"Wedding Crashers\",\n    topic: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Network\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n    publishDate: \"2018-01-03T19:04:28.809Z\",\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\n    title: \"Gone Girl\",\n    topic: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Security\" },\n    numberInStock: 7,\n    dailyRentalRate: 4.5,\n    publishDate: \"2018-01-03T19:04:28.809Z\",\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\n    title: \"The Sixth Sense\",\n    topic: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Security\" },\n    numberInStock: 4,\n    dailyRentalRate: 3.5,\n    publishDate: \"2018-01-03T19:04:28.809Z\",\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471821\",\n    title: \"The Avengers\",\n    topic: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Artificial Intelligence\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n    publishDate: \"2018-01-03T19:04:28.809Z\",\n  },\n];\n\nexport function getBlogs() {\n  return blogs;\n}\n\nexport function getBlog(id) {\n  return blogs.find((m) => m._id === id);\n}\n\nexport function saveblog(blog) {\n  let blogInDb = blogs.find((m) => m._id === blog._id) || {};\n  blogInDb.name = blog.name;\n  blogInDb.topic = topicsAPI.topics.find((g) => g._id === blog.topicId);\n  blogInDb.numberInStock = blog.numberInStock;\n  blogInDb.dailyRentalRate = blog.dailyRentalRate;\n\n  if (!blogInDb._id) {\n    blogInDb._id = Date.now();\n    blogs.push(blogInDb);\n  }\n\n  return blogInDb;\n}\n\nexport function deleteblog(id) {\n  let blogInDb = blogs.find((m) => m._id === id);\n  blogs.splice(blogs.indexOf(blogInDb), 1);\n  return blogInDb;\n}\n","import React from \"react\";\n//Input: liked:nutton\n//Output: onClick\nconst Like = (props) => {\n  let classes = \"fa fa-heart\";\n  if (!props.liked) classes += \"-o\";\n\n  return (\n    <i\n      onClick={props.onClick}\n      style={{ cursor: \"pointer\" }}\n      className={classes}\n      aria-hidden=\"true\"\n    />\n  );\n};\n\nexport default Like;\n","import React, { Component } from \"react\";\n\nclass TableHeader extends Component {\n  raiseSort = (path) => {\n    const sortColumn = { ...this.props.sortColumn };\n    if (sortColumn.path === path)\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\n    else {\n      sortColumn.path = path;\n      sortColumn.order = \"asc\";\n    }\n    this.props.onSort(sortColumn);\n  };\n\n  renderSortIcon = (column) => {\n    const { sortColumn } = this.props;\n    if (column.path !== sortColumn.path) return null;\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\" />;\n    return <i className=\"fa fa-sort-desc\" />;\n  };\n\n  render() {\n    return (\n      <thead>\n        <tr>\n          {this.props.columns.map((column) => (\n            <th\n              className=\"clickable\"\n              key={column.path || column.key}\n              onClick={() => this.raiseSort(column.path)}\n            >\n              {column.label} {this.renderSortIcon(column)}\n            </th>\n          ))}\n        </tr>\n      </thead>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\nclass TableBody extends Component {\n  renderCell = (item, column) => {\n    if (column.content) return column.content(item);\n\n    return _.get(item, column.path);\n  };\n\n  createKey = (item, column) => {\n    return item._id + (column.path || column.key);\n  };\n  render() {\n    const { data, columns } = this.props;\n    return (\n      <tbody>\n        {data.map((item) => (\n          <tr key={item._id}>\n            {columns.map((column) => (\n              <td key={this.createKey(item, column)}>\n                {this.renderCell(item, column)}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n}\n\nexport default TableBody;\n","import React from \"react\";\nimport TableHeader from \"./tableHeader\";\nimport TableBody from \"./tableBody\";\nconst Table = ({ columns, onSort, sortColumn, data }) => {\n  return (\n    <table className=\"table\">\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\n      <TableBody columns={columns} data={data} />\n      {/* <tbody>\n      {movies.map((movie) => (\n        <tr key={movie._id}>\n          <td>{movie.title}</td>\n          <td>{movie.genre.name}</td>\n          <td>{movie.numberInStock}</td>\n          <td>{movie.dailyRentalRate}</td>\n          <td>\n            <Like liked={movie.liked} onClick={() => onLike(movie)} />\n          </td>\n          <td>\n            <button\n              onClick={() => onDelete(movie)}\n              className=\"btn btn-danger btn-sm\"\n            >\n              Delete\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody> */}\n    </table>\n  );\n};\n\nexport default Table;\n","import React, { Component } from \"react\";\n//import auth from \"../services/authService\";\nimport Like from \"./common/like\";\nimport Table from \"./common/table\";\nimport { Link } from \"react-router-dom\";\n\nclass BlogsTable extends Component {\n  columns = [\n    {\n      path: \"title\",\n      label: \"Title\",\n      content: (blog) => <Link to={`/blogs/${blog._id}`}>{blog.title}</Link>,\n    },\n    { path: \"topic.name\", label: \"Topic\" },\n    { path: \"publishDate\", label: \"publishDate\" },\n    { path: \"dailyRentalRate\", label: \"Rate\" },\n    {\n      key: \"like\",\n      content: (blog) => (\n        <Like liked={blog.liked} onClick={() => this.props.onLike(blog)} />\n      ),\n    },\n  ];\n\n  render() {\n    const { blogs, onSort, sortColumn } = this.props;\n    return (\n      <Table\n        columns={this.columns}\n        data={blogs}\n        sortColumn={sortColumn}\n        onSort={onSort}\n      />\n    );\n  }\n}\n\nexport default BlogsTable;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\nconst Pagination = (props) => {\n  const { itemsCount, pageSize, currentPage, onPageChange } = props;\n  //console.log(currentPage);\n  const pageCount = Math.ceil(itemsCount / pageSize);\n  if (pageCount === 1) return null;\n  const pages = _.range(1, pageCount + 1);\n  return (\n    <nav className=\"ul pagination\">\n      {pages.map((page) => (\n        <li\n          key={page}\n          className={page === currentPage ? \"page-item active\" : \"page-item\"}\n        >\n          <a className=\"page-link\" onClick={() => onPageChange(page)}>\n            {page}\n          </a>\n        </li>\n      ))}\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n};\n\nexport default Pagination;\n","import React from \"react\";\nconst ListGroup = (props) => {\n  const {\n    items,\n    textProperty,\n    valueProperty,\n    selectedItem,\n    onItemSelect,\n  } = props;\n  return (\n    <ul className=\"list-group\">\n      {items.map((item) => (\n        <li\n          onClick={() => onItemSelect(item)}\n          key={item[valueProperty]}\n          className={\n            item === selectedItem ? \"list-group-item active\" : \"list-group-item\"\n          }\n        >\n          {item[textProperty]}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nListGroup.defaultProps = {\n  textProperty: \"name\",\n  valueProperty: \"_id\",\n};\n\nexport default ListGroup;\n","import React from \"react\";\n\nconst SearchBox = ({ value, onChange }) => {\n  return (\n    <input\n      type=\"text\"\n      name=\"query\"\n      className=\"form-control my-3\"\n      placeholder=\"Search...\"\n      value={value}\n      onChange={(e) => onChange(e.currentTarget.value)}\n    />\n  );\n};\n\nexport default SearchBox;\n","import React, { Component } from \"react\";\nimport { getBlogs } from \"../services/posts\";\nimport { getTopics } from \"../services/topics\";\n//import Like from \"./common/like\";\n\n//import { getblogs, deleteblog } from \"../services/blogService\";\nimport BlogsTable from \"./blogsTable\";\nimport Pagination from \"./common/pagination\";\nimport ListGroup from \"./common/listGroup\";\nimport { paginate } from \"../utils/paginate\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport SearchBox from \"./common/searchBox\";\nimport _ from \"lodash\";\n\nclass Blogs extends Component {\n  state = {\n    blogs: [],\n    topics: [],\n    currentPage: 1,\n    pageSize: 4,\n    searchQuery: \"\",\n    selectedTopic: null,\n    sortColumn: { path: \"title\", order: \"asc\" },\n  };\n\n  componentDidMount() {\n    const topics = [{ _id: \"\", name: \"All Topics\" }, ...getTopics()];\n    this.setState({ blogs: getBlogs(), topics });\n  }\n\n  /*\n  async componentDidMount() {\n    const { data } = await getTopics();\n    const topics = [{ _id: \"\", name: \"All Topics\" }, ...data];\n    const { data: blogs } = await getblogs();\n    this.setState({ blogs, topics });\n  }\n  */\n\n  handleLike = (blog) => {\n    const blogs = [...this.state.blogs];\n    const index = blogs.indexOf(blog);\n    blogs[index] = { ...blogs[index] };\n    blogs[index].liked = !blogs[index].liked;\n    this.setState({ blogs });\n  };\n\n  handlePageChange = (page) => {\n    this.setState({ currentPage: page });\n  };\n\n  handleTopicSelect = (topic) => {\n    this.setState({ selectedTopic: topic, searchQuery: \"\", currentPage: 1 });\n  };\n\n  handleSort = (sortColumn) => {\n    this.setState({ sortColumn });\n  };\n\n  handleSearch = (query) => {\n    this.setState({ searchQuery: query, selectedTopic: null, currentPage: 1 });\n  };\n\n  getPagedData() {\n    const {\n      currentPage,\n      pageSize,\n      selectedTopic,\n      searchQuery,\n      sortColumn,\n      blogs: allblogs,\n    } = this.state;\n    /*const filtered =\n      selectedTopic && selectedTopic._id //ternitary operator\n        ? allblogs.filter((m) => m.topic._id === selectedTopic._id)\n        : allblogs;\n*/\n    let filtered = allblogs;\n    if (searchQuery)\n      filtered = allblogs.filter((m) =>\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\n      );\n    else if (selectedTopic && selectedTopic._id)\n      filtered = allblogs.filter((m) => m.topic._id === selectedTopic._id);\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    const blogs = paginate(sorted, currentPage, pageSize);\n    return { totalCount: filtered.length, data: blogs };\n  }\n\n  render() {\n    const { length: count } = this.state.blogs;\n    const { currentPage, pageSize, sortColumn, searchQuery } = this.state;\n    const { user } = this.props;\n    if (count === 0) return <p>There are no blogs in the database.</p>;\n\n    const { totalCount, data } = this.getPagedData();\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <ListGroup\n            items={this.state.topics}\n            selectedItem={this.state.selectedTopic}\n            onItemSelect={this.handleTopicSelect}\n          />\n        </div>\n        <div className=\"col\">\n          {user && (\n            <Link\n              to=\"/blogs/new\"\n              className=\"btn btn-primary\"\n              style={{ marginBottom: 20 }}\n            >\n              New blogs\n            </Link>\n          )}\n\n          <p>Showing {totalCount} blogs in the database.</p>\n          <SearchBox\n            value={searchQuery}\n            onChange={this.handleSearch}\n          ></SearchBox>\n          <BlogsTable\n            blogs={data}\n            sortColumn={sortColumn}\n            onLike={this.handleLike}\n            onDelete={this.handleDelete}\n            onSort={this.handleSort}\n          />\n          <Pagination\n            itemsCount={totalCount}\n            pageSize={pageSize}\n            currentPage={currentPage}\n            onPageChange={this.handlePageChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Blogs;\n","import _ from \"lodash\";\n\nexport function paginate(item, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize;\n  return _(item).slice(startIndex).take(pageSize).value();\n}\n","import React from \"react\";\nconst NotFound = () => {\n  return <h1>NotFound</h1>;\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nconst NavBar = ({ user }) => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <Link className=\"navbar-brand\" to=\"#\">\n        Terminator\n      </Link>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNavAltMarkup\"\n        aria-controls=\"navbarNavAltMarkup\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n        <div className=\"navbar-nav\">\n          <NavLink className=\" nav-item nav-link\" to=\"/blogs\">\n            Blogs\n          </NavLink>\n          <NavLink className=\"nav-item nav-link\" to=\"/about\">\n            About\n          </NavLink>\n          <NavLink className=\"nav-item nav-link\" to=\"/contact\">\n            Contact\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\n\nconst About = () => {\n  return <h1>About</h1>;\n};\n\nexport default About;\n","import React from \"react\";\n\nconst Contact = () => {\n  return <h1>Contact</h1>;\n};\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport Blogs from \"./components/blogs\";\nimport NotFound from \"./components/notFound\";\nimport NavBar from \"./components/navBar\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\nimport About from \"./components/about\";\nimport Contact from \"./components/contact\";\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {}\n  render() {\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <NavBar user={this.state.user} />\n        <main className=\"container\">\n          <Switch>\n            <Route path=\"/blogs\" render={(props) => <Blogs {...props} />} />\n            <Route path=\"/about\" component={About}></Route>\n            <Route path=\"/contact\" component={Contact}></Route>\n            <Route path=\"/not-found\" component={NotFound}></Route>\n            <Redirect from=\"/\" exact to=\"/blogs\" />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}