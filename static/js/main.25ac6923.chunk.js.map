{"version":3,"sources":["services/logService.js","services/httpService.js","services/blogService.js","services/topicService.js","components/common/like.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/blogsTable.jsx","components/common/pagination.jsx","components/common/listGroup.jsx","components/common/searchBox.jsx","components/blogs.jsx","utils/paginate.js","components/notFound.jsx","components/navBar.jsx","components/about.jsx","components/contact.jsx","components/common/input.jsx","components/common/dropdown.jsx","components/common/form.jsx","components/postTable.jsx","components/posts.jsx","services/imageService.js","App.js","serviceWorker.js","index.js"],"names":["init","log","error","axios","interceptors","response","use","status","logger","toast","Promise","reject","get","post","put","delete","setJwt","jwt","defaults","headers","common","apiEndpoint","apiUrl","blogUrl","id","getBlog","blogId","http","getTopics","Like","props","classes","liked","onClick","style","cursor","className","aria-hidden","TableHeader","raiseSort","path","sortColumn","order","onSort","renderSortIcon","column","this","columns","map","key","label","Component","TableBody","renderCell","item","content","_","createKey","_id","data","Table","BlogsTable","blog","to","title","onLike","blogs","Pagination","itemsCount","pageSize","currentPage","onPageChange","pageCount","Math","ceil","pages","range","page","ListGroup","items","textProperty","valueProperty","selectedItem","onItemSelect","defaultProps","SearchBox","value","onChange","type","name","placeholder","e","currentTarget","Blogs","state","topics","searchQuery","selectedTopic","handleLike","index","indexOf","setState","handlePageChange","handleTopicSelect","topic","handleSort","handleSearch","query","allblogs","filtered","filter","m","toLowerCase","startsWith","pageNumber","startIndex","slice","take","paginate","orderBy","totalCount","length","count","user","getPagedData","marginBottom","onDelete","handleDelete","NotFound","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","class","About","Contact","src","width","height","frameborder","marginheight","marginwidth","Input","rest","htmlFor","Dropdown","options","option","Form","errors","validate","Joi","schema","abortEarly","details","message","validateProperty","obj","handleSubmit","preventDefault","doSubmit","handleChange","input","errorMessage","disabled","PostTable","BlogForm","topicId","numberInStock","dailyRentalRate","string","required","number","min","max","console","match","params","mapToViewModel","history","replace","populateTopics","populateBlog","applyStyle","text","reference","caption","c","styleContent","App","Fragment","component","render","from","exact","Boolean","window","location","hostname","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.25ac6923.chunk.js","sourcesContent":["// import Raven from \"raven-js\";\n\nfunction init() {\n  // Raven.config(\"ADD YOUR OWN API KEY\", {\n  //   release: \"1-0-0\",\n  //   environment: \"development-test\"\n  // }).install();\n}\n\nfunction log(error) {\n  // Raven.captureException(error);\n}\n\nexport default {\n  init,\n  log,\n};\n","import axios from \"axios\";\nimport logger from \"./logService\";\nimport { toast } from \"react-toastify\";\n//axios.defaults.headers.common[\"content-type\"] = \"application/json\";\n\naxios.interceptors.response.use(null, (error) => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    // console.log(\"logging the error\", error);\n    // alert(\"An unexpected error occurred.\");\n    logger.log(error);\n    toast.error(\"An unexpected error occurred.\");\n  }\n\n  return Promise.reject(error);\n});\n\nfunction setJwt(jwt) {\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\n}\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n  setJwt,\n};\n","import http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\n\nconst apiEndpoint = apiUrl + \"/blogs\";\n\nfunction blogUrl(id) {\n  return apiUrl + `/posts/${id}`;\n}\n\nexport function getBlogs() {\n  return http.get(apiEndpoint);\n}\n\nexport function getBlog(blogId) {\n  return http.get(blogUrl(blogId));\n}\n\nexport async function saveBlog(blog) {\n  if (blog._id) {\n    const body = { ...blog };\n    delete body._id;\n    return http.put(blogUrl(blog._id), body);\n  }\n  return http.post(apiEndpoint, blog);\n}\n\nexport function deleteBlog(blogId) {\n  return http.delete(blogUrl(blogId));\n}\n","import http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\n\nexport function getTopics() {\n  return http.get(apiUrl + \"/topics\");\n}\n","import React from \"react\";\n//Input: liked:nutton\n//Output: onClick\nconst Like = (props) => {\n  let classes = \"fa fa-heart\";\n  if (!props.liked) classes += \"-o\";\n\n  return (\n    <i\n      onClick={props.onClick}\n      style={{ cursor: \"pointer\" }}\n      className={classes}\n      aria-hidden=\"true\"\n    />\n  );\n};\n\nexport default Like;\n","import React, { Component } from \"react\";\n\nclass TableHeader extends Component {\n  raiseSort = (path) => {\n    const sortColumn = { ...this.props.sortColumn };\n    if (sortColumn.path === path)\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\n    else {\n      sortColumn.path = path;\n      sortColumn.order = \"asc\";\n    }\n    this.props.onSort(sortColumn);\n  };\n\n  renderSortIcon = (column) => {\n    const { sortColumn } = this.props;\n    if (column.path !== sortColumn.path) return null;\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\" />;\n    return <i className=\"fa fa-sort-desc\" />;\n  };\n\n  render() {\n    return (\n      <thead>\n        <tr>\n          {this.props.columns.map((column) => (\n            <th\n              className=\"clickable\"\n              key={column.path || column.key}\n              onClick={() => this.raiseSort(column.path)}\n            >\n              {column.label} {this.renderSortIcon(column)}\n            </th>\n          ))}\n        </tr>\n      </thead>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\nclass TableBody extends Component {\n  renderCell = (item, column) => {\n    if (column.content) return column.content(item);\n\n    return _.get(item, column.path);\n  };\n\n  createKey = (item, column) => {\n    return item._id + (column.path || column.key);\n  };\n  render() {\n    const { data, columns } = this.props;\n    return (\n      <tbody>\n        {data.map((item) => (\n          <tr key={item._id}>\n            {columns.map((column) => (\n              <td key={this.createKey(item, column)}>\n                {this.renderCell(item, column)}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n}\n\nexport default TableBody;\n","import React from \"react\";\nimport TableHeader from \"./tableHeader\";\nimport TableBody from \"./tableBody\";\nconst Table = ({ columns, onSort, sortColumn, data }) => {\n  return (\n    <table className=\"table\">\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\n      <TableBody columns={columns} data={data} />\n      {/* <tbody>\n      {movies.map((movie) => (\n        <tr key={movie._id}>\n          <td>{movie.title}</td>\n          <td>{movie.genre.name}</td>\n          <td>{movie.numberInStock}</td>\n          <td>{movie.dailyRentalRate}</td>\n          <td>\n            <Like liked={movie.liked} onClick={() => onLike(movie)} />\n          </td>\n          <td>\n            <button\n              onClick={() => onDelete(movie)}\n              className=\"btn btn-danger btn-sm\"\n            >\n              Delete\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody> */}\n    </table>\n  );\n};\n\nexport default Table;\n","import React, { Component } from \"react\";\n//import auth from \"../services/authService\";\nimport Like from \"./common/like\";\nimport Table from \"./common/table\";\nimport { Link } from \"react-router-dom\";\n\nclass BlogsTable extends Component {\n  columns = [\n    {\n      path: \"title\",\n      label: \"Title\",\n      content: (blog) => <Link to={`/blogs/${blog._id}`}>{blog.title}</Link>,\n    },\n    { path: \"topic.name\", label: \"Topic\" },\n    { path: \"publishDate\", label: \"publishDate\" },\n    {\n      key: \"like\",\n      content: (blog) => (\n        <Like liked={blog.liked} onClick={() => this.props.onLike(blog)} />\n      ),\n    },\n  ];\n\n  render() {\n    const { blogs, onSort, sortColumn } = this.props;\n    return (\n      <Table\n        columns={this.columns}\n        data={blogs}\n        sortColumn={sortColumn}\n        onSort={onSort}\n      />\n    );\n  }\n}\n\nexport default BlogsTable;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\nconst Pagination = (props) => {\n  const { itemsCount, pageSize, currentPage, onPageChange } = props;\n  //console.log(currentPage);\n  const pageCount = Math.ceil(itemsCount / pageSize);\n  if (pageCount === 1) return null;\n  const pages = _.range(1, pageCount + 1);\n  return (\n    <nav className=\"ul pagination\">\n      {pages.map((page) => (\n        <li\n          key={page}\n          className={page === currentPage ? \"page-item active\" : \"page-item\"}\n        >\n          <a className=\"page-link\" onClick={() => onPageChange(page)}>\n            {page}\n          </a>\n        </li>\n      ))}\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n};\n\nexport default Pagination;\n","import React from \"react\";\nconst ListGroup = (props) => {\n  const {\n    items,\n    textProperty,\n    valueProperty,\n    selectedItem,\n    onItemSelect,\n  } = props;\n  return (\n    <ul className=\"list-group\">\n      {items.map((item) => (\n        <li\n          onClick={() => onItemSelect(item)}\n          key={item[valueProperty]}\n          className={\n            item === selectedItem ? \"list-group-item active\" : \"list-group-item\"\n          }\n        >\n          {item[textProperty]}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nListGroup.defaultProps = {\n  textProperty: \"name\",\n  valueProperty: \"_id\",\n};\n\nexport default ListGroup;\n","import React from \"react\";\n\nconst SearchBox = ({ value, onChange }) => {\n  return (\n    <input\n      type=\"text\"\n      name=\"query\"\n      className=\"form-control my-3\"\n      placeholder=\"Search...\"\n      value={value}\n      onChange={(e) => onChange(e.currentTarget.value)}\n    />\n  );\n};\n\nexport default SearchBox;\n","import React, { Component } from \"react\";\nimport { getBlogs } from \"../services/blogService\";\nimport { getTopics } from \"../services/topicService\";\n//import Like from \"./common/like\";\n\n//import { getblogs, deleteblog } from \"../services/blogService\";\nimport BlogsTable from \"./blogsTable\";\nimport Pagination from \"./common/pagination\";\nimport ListGroup from \"./common/listGroup\";\nimport { paginate } from \"../utils/paginate\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport SearchBox from \"./common/searchBox\";\nimport _ from \"lodash\";\n\nclass Blogs extends Component {\n  state = {\n    blogs: [],\n    topics: [],\n    currentPage: 1,\n    pageSize: 4,\n    searchQuery: \"\",\n    selectedTopic: null,\n    sortColumn: { path: \"title\", order: \"asc\" },\n  };\n  /*\n  componentDidMount() {\n    const topics = [{ _id: \"\", name: \"All Topics\" }, ...getTopics()];\n    this.setState({ blogs: getBlogs(), topics });\n  }\n*/\n\n  async componentDidMount() {\n    const { data } = await getTopics();\n\n    const topics = [{ _id: \"\", name: \"All Topics\" }, ...data];\n    const { data: blogs } = await getBlogs();\n    this.setState({ blogs, topics });\n  }\n\n  handleLike = (blog) => {\n    const blogs = [...this.state.blogs];\n    const index = blogs.indexOf(blog);\n    blogs[index] = { ...blogs[index] };\n    blogs[index].liked = !blogs[index].liked;\n    this.setState({ blogs });\n  };\n\n  handlePageChange = (page) => {\n    this.setState({ currentPage: page });\n  };\n\n  handleTopicSelect = (topic) => {\n    this.setState({ selectedTopic: topic, searchQuery: \"\", currentPage: 1 });\n  };\n\n  handleSort = (sortColumn) => {\n    this.setState({ sortColumn });\n  };\n\n  handleSearch = (query) => {\n    this.setState({ searchQuery: query, selectedTopic: null, currentPage: 1 });\n  };\n\n  getPagedData() {\n    const {\n      currentPage,\n      pageSize,\n      selectedTopic,\n      searchQuery,\n      sortColumn,\n      blogs: allblogs,\n    } = this.state;\n    /*const filtered =\n      selectedTopic && selectedTopic._id //ternitary operator\n        ? allblogs.filter((m) => m.topic._id === selectedTopic._id)\n        : allblogs;\n*/\n    let filtered = allblogs;\n    if (searchQuery)\n      filtered = allblogs.filter((m) =>\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\n      );\n    else if (selectedTopic && selectedTopic._id)\n      filtered = allblogs.filter((m) => m.topic._id === selectedTopic._id);\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    const blogs = paginate(sorted, currentPage, pageSize);\n    return { totalCount: filtered.length, data: blogs };\n  }\n\n  render() {\n    const { length: count } = this.state.blogs;\n    const { currentPage, pageSize, sortColumn, searchQuery } = this.state;\n    const { user } = this.props;\n    if (count === 0) return <p>There are no blogs in the database.</p>;\n\n    const { totalCount, data } = this.getPagedData();\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <ListGroup\n            items={this.state.topics}\n            selectedItem={this.state.selectedTopic}\n            onItemSelect={this.handleTopicSelect}\n          />\n        </div>\n        <div className=\"col\">\n          {user && (\n            <Link\n              to=\"/blogs/new\"\n              className=\"btn btn-primary\"\n              style={{ marginBottom: 20 }}\n            >\n              New blogs\n            </Link>\n          )}\n\n          <p>Showing {totalCount} blogs in the database.</p>\n          <SearchBox\n            value={searchQuery}\n            onChange={this.handleSearch}\n          ></SearchBox>\n          <BlogsTable\n            blogs={data}\n            sortColumn={sortColumn}\n            onLike={this.handleLike}\n            onDelete={this.handleDelete}\n            onSort={this.handleSort}\n          />\n          <Pagination\n            itemsCount={totalCount}\n            pageSize={pageSize}\n            currentPage={currentPage}\n            onPageChange={this.handlePageChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Blogs;\n","import _ from \"lodash\";\n\nexport function paginate(item, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize;\n  return _(item).slice(startIndex).take(pageSize).value();\n}\n","import React from \"react\";\nconst NotFound = () => {\n  return <h1>NotFound</h1>;\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nconst NavBar = ({ user }) => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <Link className=\"navbar-brand\" to=\"#\">\n        Terminator\n      </Link>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNav\"\n        aria-controls=\"navbarNav\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul className=\"navbar-nav\">\n          <li class=\"nav-item\">\n            <NavLink className=\"nav-link\" to=\"/blogs\">\n              Blogs\n            </NavLink>\n          </li>\n          <li class=\"nav-item\">\n            <NavLink className=\"nav-link\" to=\"/about\">\n              About\n            </NavLink>\n          </li>\n          <li class=\"nav-item\">\n            <NavLink className=\"nav-link\" to=\"/contact\">\n              Contact\n            </NavLink>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\n\nconst About = () => {\n  return <h1>About</h1>;\n};\n\nexport default About;\n","import React from \"react\";\n\nconst Contact = () => {\n  return (\n    <div>\n      <h1>Contact</h1>\n      <iframe\n        src=\"https://docs.google.com/forms/d/e/1FAIpQLSf7r7MjR5hgbsskfwtQXSrR6-rr6wXlwZJR2zizhivSVynzOg/viewform?embedded=true\"\n        width=\"640\"\n        height=\"673\"\n        frameborder=\"0\"\n        marginheight=\"0\"\n        marginwidth=\"0\"\n      ></iframe>\n    </div>\n  );\n};\n\nexport default Contact;\n","import React from \"react\";\n\nconst Input = ({ name, label, error, ...rest }) => {\n  //we replace other parameter to rest\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input {...rest} name={name} id={name} className=\"form-control\" />\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\n\nconst Dropdown = ({ name, label, options, error, onChange }) => {\n  //we replace other parameter to rest\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <select\n        onChange={onChange}\n        name={name}\n        id={name}\n        className=\"custom-select\"\n      >\n        <option value=\"\" />\n        {options.map((option) => (\n          <option key={option._id} value={option._id}>\n            {option.name}\n          </option>\n        ))}\n      </select>\n\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Dropdown;\n","import React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\nimport Input from \"./input\";\nimport Dropdown from \"./dropdown\";\n\nclass Form extends Component {\n  state = {\n    data: {},\n    errors: {},\n  };\n  validate = () => {\n    const options = {\n      abortEarly: false,\n    };\n    const { error } = Joi.validate(this.state.data, this.schema, options);\n    if (!error) return null;\n\n    const errors = {};\n    for (let item of error.details) errors[item.path[0]] = item.message;\n    return errors;\n  };\n\n  validateProperty = ({ name, value }) => {\n    const obj = { [name]: value };\n    const schema = { [name]: this.schema[name] };\n    const { error } = Joi.validate(obj, schema);\n    return error ? error.details[0].message : null;\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const errors = this.validate();\n    this.setState({ errors: errors || {} });\n    if (errors) return;\n    this.doSubmit(this.state.data);\n  };\n\n  handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n    this.setState({ data, errors });\n  };\n\n  renderButton(label) {\n    return (\n      <button disabled={this.validate()} className=\"btn btn-primary\">\n        {label}\n      </button>\n    );\n  }\n  renderInput(name, label, type = \"text\") {\n    const { data, errors } = this.state;\n    return (\n      <Input\n        type={type}\n        name={name}\n        value={data[name]}\n        label={label}\n        error={errors[name]}\n        onChange={this.handleChange}\n      />\n    );\n  }\n\n  renderDropdown(name, label, options) {\n    const { data, errors } = this.state;\n    return (\n      <Dropdown\n        options={options}\n        name={name}\n        value={data[name]}\n        label={label}\n        error={errors[name]}\n        onChange={this.handleChange}\n      />\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component } from \"react\";\n//import auth from \"../services/authService\";\nimport Like from \"./common/like\";\nimport Table from \"./common/table\";\nimport { Link } from \"react-router-dom\";\n\nclass PostTable extends Component {\n  columns = [\n    {\n      path: \"value\",\n      label: \"\",\n      //content: (blog) => <Link to={`/blogs/${blog._id}`}>{blog.title}</Link>,\n    },\n    {\n      path: \"row\",\n      label: \"\",\n      //content: (blog) => <Link to={`/blogs/${blog._id}`}>{blog.title}</Link>,\n    },\n\n    {\n      path: \"type\",\n      label: \"\",\n      //content: (blog) => <Link to={`/blogs/${blog._id}`}>{blog.title}</Link>,\n    },\n  ];\n\n  render() {\n    const { blogs, onSort, sortColumn } = this.props;\n    return (\n      <div class=\"hideme\">\n        <Table\n          columns={this.columns}\n          data={blogs}\n          sortColumn={sortColumn}\n          onSort={onSort}\n        />\n      </div>\n    );\n  }\n}\n\nexport default PostTable;\n","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport { getBlog } from \"../services/blogService\";\nimport { getTopics } from \"../services/topicService\";\nimport { imageUrl } from \"../services/imageService\";\nimport PostTable from \"./postTable\";\n\nclass BlogForm extends Form {\n  state = {\n    data: {\n      title: \"\",\n      topicId: \"Comedy\",\n      numberInStock: \"\",\n      dailyRentalRate: \"\",\n      content: [],\n    },\n    topics: [],\n    errors: {},\n    sortColumn: { path: \"row\", order: \"asc\" },\n  };\n\n  schema = {\n    _id: Joi.string(),\n    title: Joi.string().required().label(\"Title\"),\n    topicId: Joi.string().required().label(\"Topic\"),\n    numberInStock: Joi.number()\n      .required()\n      .min(0)\n      .max(100)\n      .label(\"Number in Stock\"),\n    dailyRentalRate: Joi.number().required().min(0).max(19).label(\"Rate\"),\n  };\n\n  async populateTopics() {\n    //const topics = [...getTopics()];\n    const { data: topics } = await getTopics();\n    this.setState({ topics });\n    console.log(\"genres \" + this.state.topics);\n  }\n\n  async populateBlog() {\n    const blogId = this.props.match.params.id;\n    if (!blogId) return;\n    try {\n      const { data: blog } = await getBlog(blogId);\n      //const blog = await getBlog(blogId);\n      this.setState({ data: this.mapToViewModel(blog) });\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404)\n        return this.props.history.replace(\"/not-found\");\n    }\n  }\n\n  async componentDidMount() {\n    await this.populateTopics();\n    await this.populateBlog();\n  }\n\n  mapToViewModel(blog) {\n    this.applyStyle(blog.content.text);\n    return {\n      _id: blog._id,\n      title: blog.title,\n      topicId: blog.topic.name,\n      numberInStock: blog.numberInStock,\n      dailyRentalRate: blog.dailyRentalRate,\n      content: blog.content.text,\n    };\n  }\n\n  styleContent(content) {\n    switch (content.type) {\n      case \"heading\":\n        return <h3>{content.value}</h3>;\n      case \"subheading\":\n        return <h4>{content.value}</h4>;\n      case \"image\":\n        return (\n          <figure class=\"figure\">\n            <img\n              src={imageUrl(content.reference)}\n              class=\"center figure-img img-fluid rounded\"\n            ></img>\n            <figcaption class=\"center\">{content.caption}.</figcaption>\n          </figure>\n        );\n      default:\n        return <p>{content.value}</p>;\n    }\n  }\n\n  applyStyle(content) {\n    return content.map((c) => {\n      c.value = this.styleContent(c);\n    });\n  }\n\n  /*\n  doSubmit = async () => {\n    await saveblog(this.state.data);\n    this.props.history.push(\"/blogs\");\n  };\n*/\n  handleSort = (sortColumn) => {\n    this.setState({ sortColumn });\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>{this.state.data.title}</h1>\n        <div>Topic: {this.state.data.topicId}</div>\n        <PostTable\n          blogs={this.state.data.content}\n          sortColumn={this.state.sortColumn}\n          onLike={this.handleLike}\n          onDelete={this.handleDelete}\n          onSort={this.handleSort}\n        />\n      </div>\n    );\n  }\n}\n\nexport default BlogForm;\n","import { apiUrl } from \"../config.json\";\n\nexport function imageUrl(id) {\n  return apiUrl + `/${id}`;\n}\n","import React, { Component } from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport Blogs from \"./components/blogs\";\nimport NotFound from \"./components/notFound\";\nimport NavBar from \"./components/navBar\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\nimport About from \"./components/about\";\nimport Contact from \"./components/contact\";\nimport BlogForm from \"./components/posts\";\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {}\n  render() {\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <NavBar user={this.state.user} />\n        <main className=\"container\">\n          <Switch>\n            <Route path=\"/blogs/:id\" component={BlogForm} />\n            <Route path=\"/blogs\" render={(props) => <Blogs {...props} />} />\n            <Route path=\"/about\" component={About}></Route>\n            <Route path=\"/contact\" component={Contact}></Route>\n            <Route path=\"/not-found\" component={NotFound}></Route>\n            <Redirect from=\"/\" exact to=\"/blogs\" />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nReactDOM.render(\n  <HashRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}